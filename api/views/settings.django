<script>
  function hideText(text) {
    return text.slice(0, 4) + '********' + text.slice(-4)
  }
</script>

<div class="">
  <h6>API keys and Credentials</h6>
  <p>Manage your API keys and credentials. These keys are used to authenticate your requests to the StreamX API.</p>
  <ul>
    <b>Note:</b>
    <li>Do not share your private API key with anyone. It should be kept secure and not exposed to the public.</li>
    <li>When you generate a new key, the old key will be invalidated and you will need to update your applications with the new key.</li>
  </ul>
  <div class="card-body">
    <div class="row">
      <div class="col">
        <div class="card">
          <div class="card-header">Public API Key</div>
          <ul class="list-group list-group-flush">
            <li class="list-group-item">
              {{ data.PublicKey }}
              <span hidden="true">{{ data.PublicKey }}</span>
              <i class="bi bi-copy" style="cursor: pointer;"></i>
            </li>
          </ul>
          <p class="card-text p-4">
            This key is safe to expose on the client side and can be used to make <code>subscribe</code> requests
          </p>
        </div>
      </div>
      <div class="col">
        <div class="card">
          <div class="card-header">Private API Key</div>
          <ul class="list-group list-group-flush">
            <li class="list-group-item">
              <script>
                document.write(hideText('{{ data.ApiKey }}'))
              </script>
              <span hidden="true">{{ data.ApiKey }}</span>
              <i class="bi bi-copy" style="cursor: pointer;"></i>
            </li>
          </ul>
          <p class="card-text p-4">
            Use this to make <code>push</code> requests or with our publish language libraries
          </p>
        </div>
      </div>
    </div>
  </div>
</div>

<script>
  document.querySelectorAll('.bi-copy').forEach(function (icon) {
    icon.addEventListener('click', function (event) {
      var text = event.target.parentElement.querySelector('span').innerText
      copy(text)
      toast('Copied to clipboard')
    })
  })
</script>
